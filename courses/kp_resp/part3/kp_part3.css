/*

//////(Day15)

using media queries in challenge 3 of part 2


place media queries at the bottom so they can overwrite things

.main-container > .flex-row  {
    display: block;
}

.conatainer2-side1, .conatainer2-side2, .container-1-text-wrapper-col, .container-1-image-container-col {
    width: 100%;
}


//breakpoints
when my layout starts to fail
keep the bp to min for the css code to be easier to maintain

phone, tablet,  tab landscape, desktop, big desktop
600px, 900px, 1200px, and 1800px,+

generally the smallest devices are 320px

the less breakpoints you have, the easier it is to maintain them

//////(Day16)

html
<meta name="viewport" content="width=device-width, initial-scale=1.0">
//makes the website responsive and not show desktop view on mobile phones


//font in the body is mainly for p's, the main content of the document
//and then can overwrite later on headers etc.
body {
    margin: 0;
    font-family: 
    font-size:
}

try plain html without any css on mobile mode, it is already responsive
then work from mobile to desktop in css
moving from section to section
for <section> added padding: 4em 0;
for <container-wrap> added width 85%, margin 0 auto, max-width: 1120px;

its simpler there because most of the edits will be for the colors,fonts etc
then on larger sizes handle the layout using media queries

avoid texts that going all the way across in larger sizes
use responsive mode to check on breakpoints on text spread size
starting around 600-800px

as we are working from mobile up will use min width
@media (min-width: 600px) {
    row {
        display: row
    }
}


in html, lorem + tab, lorem100 + tab (100 words) emmet

can use min-height: 600px at the hero part
so it can stretch with content
to center items use flex centers

////variables
//root has higher specificity than html, so thats why we choose to put variables in
:root {
    --dark: #000000;
}

p {
    //yellow is a secondary color, fallback in case --dark does not work
    color: var(--dark, yellow);

    //variable that is accessible only in this block
    --localVariable: #000000

    //change a variable for this block only
    --dark: #ffffff
}



//re-construct the navigation in challenge3
//start mobile, flex column, 100% width, icon and logo first row, icon on left

//nav will have display none class and display block to be toggled with js 





//Challenge03 part2 continue
work on the navigation to make it mobile clicked menu
also adjusted the centering of the links in the middle


    /* this to give equal widths both sides of the middle navigation icons
    in order for the middle navigation icons container to have an exact centering
    on the layout with its margin auto because one side smaller than the other 
    will not distribute spaces around it equally on both sides
    .icon2, .nav__list3 {
        width: 11vw;
        max-width: 280px;
        justify-content: flex-end;
    }

    /* this is to adjust the button to be slightly lower to be on the same
    baseline as the rest of the links in the menu
    .nav-button__button {
        padding-top: 1px;
    }






*/




/* the order you put things in is important //
here 400 will apply till only 500 then 500 will take over
however because the .box is stated after, 
it will take over the two media queries above*/
@media (min-width: 400px) {

    .box {
        background-color: #87629A;
    }

}

@media (min-width: 500px) {

    .box {
        background-color: #cd91ec;
    }

}

.box {
    background-color: #23424A ;
    width: 90%;
    padding: 10em 0;
    margin: 5em auto;
}



/* 600px or bigger, size between 600 and 900
@media (min-width: 600px) and 
(max-width:900px) {

    .box {
        background-color: #136C72;
    }

}

/* 600px or smaller
@media (max-width: 600px) {

    .box {
        background-color: #87629A;
    }

}

*/