* {
    box-sizing: border-box;
}

body {
    /* this removed the border around the body from the elements */
    margin: 0;
}

/*
Responsive Design

////// avoid setting fixed widths/heights
a div will take all the horizontal space so no need to give width
and use media queries

by default everything is responsive
using css makes it not responsive

>block elements by default have a width of 100% of the parent, 
in this case the body

giving fixed width/height to a child can cause overflow

the area h&w is already adapting with the content to the screen size without giving fixed's

> use % instead of fixed widths
> instead of height "use padding" to give background space
> use padding with "EM measure", relative to the default font size 1em = 16px
use padding to give button a size



//////(Day2) EM and REM
EM;
relates to the parent, cascades to the nearest defined font to a parent
does compound so be aware, 
but can be used in making a cascading relation between parents/children

when used for padding, margins, widths, heights
it does not look for the parent, they look for the font size of that element


REM; (root em)
looks at the html css tag or root, wether declared or not
font size by default is 16px, if not declared
some people use font-size: 62.5% to make the root 10px and use from that

can be used for padding, margins, widths, heights



//////(Day3) 
max-width


//////(Day4) 
viewport units
vh, vw, vmax, vmin
not accessibility friendly if used with font-size
used for hero parts

height: 100vh
on mobile devices causes issues with content overflowing
so use media queries to fix that
media queries of min size etc.

vmax, viewport maximum, which ever view port is bigger from width and height
vmin

can be used for padding, margins, widths, heights


//////(Day5) 
challenge03

//////(Day6)
em vs rem cont.

.container {
    padding: 10% 0; /*
}
.inner-content {
    width: 80%; /*
    margin: 0 auto; /*instead of container l/r padding
}
.inner-content-text-div {
    max-width: 900px;   /*div float at left with max width for the text
}











challenge1;
//set width percentage from parent
    width: 80%;
//avoid overflow
    remove height


challenge2;
//allow parent to stretch end to end
//center the inner content and set max width
    remove widths
    margin: 0 auto;
    max-width: 50%;


challenge3;
//.inner-content h1 { margin: 0;
font-size: 1rem;
line-height: calc(1.5*1em);
button >  padding: 1em 3em; border-radius: 2em; border: 0px;




* make a container like day 4 at end of course to sum up all the information
as a reference



*/


.parent {
    background-color: #23424A;
    color: white;
    padding: 5em;

    margin: 0 auto;

    /* 80% of the body*/
    /*width: 80%;*/

}

.child {
    background-color: #38CFD9;
    height: 100px;
}


