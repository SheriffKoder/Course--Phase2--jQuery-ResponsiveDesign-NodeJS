/*

//////(Day8)
Flexbox in responsive design:

check caniuse.com to check on the css support

flex items, they take the least possible size 
according to the content 
width:100% fixes that by dividing areas all evenly


> flex row
> adding gap space using;
    .row gap
    . col + col: margin-left
    . col margin
> setting width to 100% so divide area evenly between columns



//////(Day9)
as long as the image is in a div it will not stretch

removed inner-content 80% width and added padding on the container
it has already margin auto and max-width so will center

make the inner-content a flex-row
add an image div, 

change container2_cols padding from em to vmin to avoid overflow on large em's

flex-wrap works when there are items 4 items each 33% width, the 4th will wrap

i was able to allow mobile response using width of hero-items 75vmin, row-wrap
but it need better control


///
align-self, allows the image to stay and retain its natural dimensions
adding width% to flex columns then adjust with justify-content
to create this gap from the leftover width %






//challenge01_part2
a good idea is to avoid using descendant selectors
give class names either container__header or accent-text

reduce html by moving the flex_row class to the inner content div
separate the responsibility across two classes

center text using text-align

//allows all images to be responsive and not overflow their container div
img {
    max-width: 100%;
}




*/



* {
    box-sizing: border-box;
}

body {
    margin: 0;
}


:root {
    --color-border: rgba(255, 192, 203, 0.0);
}

.container {
    padding: 10vmin 5vmin; /**/
}

.inner-content {
    width: 80%; /**/
    margin: 0 auto; /*instead of container l/r padding*/
    max-width: 900px;   /*div float at left with max width for the text */
    background-color: var(--color-border);


}


/*/////////////////////////////////////////////////////////////////////////*/

.row { /* flex container */
    display: flex;
    flex-direction: row;    /*default*/

    justify-content: space-between;


}

.space-between {
    justify-content: space-between;
}

.row_wrap {
    flex-wrap: wrap;
    
    /*adding space(1) */
    gap: 1em;

}

.container2__col {
                /*some styling*/
                background-color: #136C72;
                color: white;
                border-radius: 0.5em;
                box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15);
                
                text-align: center;
                padding: 1.5vmin;
}

.col {
    /* divide spaces evenly for flex items */
    width: 30%;

    /*adding space(2)*/
    /*margin: 0.25em; /*affects outside spacing */

}

/*adding space(3)*/
/* each col has a col after before it*/
.col + .col {
    /*margin-left: 0.5em;*/
}





/*/////////////////////////////////////////////////////////////////////////*/
.hero {
    background-color: #23424A;
    color: white;
    
}


.hero__header {
    margin: 0;

    font-family: system-ui;
    font-style: normal;
    font-weight: 900;

    font-size: 2.5rem;
    line-height: calc(1.164*1em);
    margin-bottom: 1em;
    background-color:var(--color-border);;


}


.hero__text {
    font-family: system-ui;
    font-style: normal;
    font-weight: 400;

    font-size: 1rem;
    line-height: calc(1.5*1em);

    margin-bottom: 2em;
    background-color: var(--color-border);;

}


.hero__button {
    background-color: #38CFD9;
    color: #23424A;

    font-size: 1rem;
    font-weight: 900;
    text-transform: uppercase;

    padding: 1em 3em;

    border-radius: 2em;
    border: 0px;

    display: inline-block;
    
}


.hero__button:hover,
.hero__button:focus {
    opacity: 0.9;
}



.hero__image {
    border: 1px solid  var(--color-border);
    align-self: center;
    width: 30%;

    align-self: flex-start;



}

.hero__items {
    border: 1px solid var(--color-border);
    width: 60%;

}

.hero__image img {
    max-width: 100%;
}


